{"variants":[{"paths":["\/tutorials\/tutorial\/practice2"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"2列表示のセクションの上にヘッダーを作って、何のコンテンツの領域かわかるようにしてみましょう"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"ヘッダーの位置を固定する必要はありません。2列表示のCell同様にスクロールするようにしてください"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"完成イメージを示したデザインファイルは "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.figma.com\/file\/EkZe8zNKd8uTr1vehAzC74\/pixiv%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86?node-id=729%3A28&t=LvrX1uvlmhmv5YFJ-0"},{"type":"text","text":" です"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"以下は解答になります。この教材では、まず解答を見ずにインターネット等を見て自分で書いてみることをおすすめしています。15分以上詰まったら見るという使い方をしても大丈夫です"}]}],"estimatedTimeInMinutes":40,"title":"課題2: おすすめのヘッダーを作ってみよう","image":"header_2.png","chapter":"課題2: おすすめのヘッダーを作ってみよう","kind":"hero","backgroundImage":"header_2.png"},{"kind":"tasks","tasks":[{"anchor":"解答-ヘッダーを作る","title":"解答: ヘッダーを作る","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"ヘッダーを作る方法もいくつかありますが、課題1で使用したCompositionalLayoutではSectionに対してSupplementaryViewと呼ばれる付加的なViewをつけることができます"}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"Practice2_Section1_HeaderCell_1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"ヘッダー用のCellを作成します。SupplementaryViewに設定するViewはUICollectionReusableViewにする必要があるため、こちらを継承します。独自にbindメソッドを作り、外からラベルのテキストを設定できるようにしておきます"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"HeaderCell.xibを追加します。Custom ClassにHeaderCellを設定します"}]}],"caption":[],"type":"step","runtimePreview":null,"media":"Practice2_HeaderCell_1.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"UILabelを配置します。AutoLayoutでVertically in Containerと、leadingのマージンに8を設定します。OutletをHeaderCellのlabelと紐付けます"}]}],"caption":[],"type":"step","runtimePreview":null,"media":"Practice2_HeaderCell_2.png"},{"code":"Practice2_Section1_MainViewController_1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"作ったHeaderCellをCollectionViewに登録しておきます"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"Practice2_Section1_MainViewController_2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Sectionに対してSupplementaryViewを設定します。elementKindにはRecommendedHeaderという名前をつけておきます"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"Practice2_Section1_MainViewController_3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"あとはCollectionViewがこのDelegateメソッドを呼んでくれる際に、設定したelementKindと同じものであれば、HeaderCellにRecommendedとタイトルを設定して返すようにします"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice3","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"課題3: ランキングのセクションを作ってみよう","abstract":[{"type":"text","text":"課題1・2で作ったセクションの上に、ランキングを配置するセクションを作ってみましょう"}]}],"identifier":{"url":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice2","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"課題2: おすすめのヘッダーを作ってみよう","categoryPathComponent":"TableOfContents","role":"project","category":"お絵かきSNSを作ってみよう"},"hierarchy":{"modules":[{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--1:------2----------------","projects":[{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice1","sections":[{"kind":"task","reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice1#%E8%A7%A3%E7%AD%94-2%E5%88%97%E8%A1%A8%E7%A4%BA%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF%E3%82%92%E4%BD%9C%E3%82%8B"}]}]},{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--2:-----------------","projects":[{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice2","sections":[{"kind":"task","reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice2#%E8%A7%A3%E7%AD%94-%E3%83%98%E3%83%83%E3%83%80%E3%83%BC%E3%82%92%E4%BD%9C%E3%82%8B"}]}]},{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--3:-------------------","projects":[{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice3","sections":[{"kind":"task","reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice3#%E8%A7%A3%E7%AD%94-%E3%83%A9%E3%83%B3%E3%82%AD%E3%83%B3%E3%82%B0%E3%81%AE%E3%82%BB%E3%83%AB%E3%82%92%E4%BD%9C%E3%82%8B"},{"kind":"task","reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice3#%E8%A7%A3%E7%AD%94-%E3%82%BB%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E7%AE%A1%E7%90%86%E3%81%97%E3%82%84%E3%81%99%E3%81%8F%E3%81%99%E3%82%8B"},{"kind":"task","reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice3#%E8%A7%A3%E7%AD%94-%E3%83%A9%E3%83%B3%E3%82%AD%E3%83%B3%E3%82%B0%E3%81%AE%E3%82%BB%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B"}]}]},{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--4:-------------------","projects":[{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice4","sections":[{"kind":"task","reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice4#%E8%A7%A3%E7%AD%94-%E3%82%A4%E3%83%A9%E3%82%B9%E3%83%88%E3%81%AE%E6%83%85%E5%A0%B1%E3%82%92%E5%8F%96%E3%81%A3%E3%81%A6%E3%81%8F%E3%82%8B"},{"kind":"task","reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice4#%E8%A7%A3%E7%AD%94-Nuke%E3%81%A7%E7%94%BB%E5%83%8F%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B"}]}]},{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--5:-ViewModel-------","projects":[{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice5","sections":[{"kind":"task","reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice5#%E8%A7%A3%E7%AD%94-ViewModel%E3%82%92%E4%BD%9C%E3%82%8B"}]}]},{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--6:----(----)----------","projects":[{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice6","sections":[{"kind":"task","reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice6#%E8%A7%A3%E7%AD%94-%E3%83%AD%E3%83%BC%E3%83%89%E4%B8%AD%E3%81%AE%E6%8C%99%E5%8B%95%E3%82%92%E4%BD%9C%E3%82%8B"}]}]},{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--7:----------------","projects":[{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice7","sections":[{"kind":"task","reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice7#%E8%A7%A3%E7%AD%94-%E7%84%A1%E9%99%90%E3%82%B9%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%AB%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B"}]}]},{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--8:---------------","projects":[{"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice8","sections":[{"kind":"task","reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice8#%E8%A7%A3%E7%AD%94-%E3%81%84%E3%81%84%E3%81%AD%E3%83%9C%E3%82%BF%E3%83%B3%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B"}]}]}],"reference":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents","paths":[["doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents","doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/$volume","doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--2:-----------------"]]},"references":{"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice5":{"role":"project","title":"課題5: ViewModelを作ってみよう","estimatedTime":"1hr 0min","abstract":[{"type":"text","text":"ViewModelにはUIに表示するためのプロパティを保持したり、APIを叩くなどの処理を行うためのメソッドを生やしていきます。そうすることでViewControllerはその値を見る(購読する)のと、処理を呼び出すだけの存在になり、シンプルなものになっていきます"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice5","kind":"project","type":"topic","url":"\/tutorials\/tutorial\/practice5"},"doc://net.pixiv.training.Tutorial/tutorials/TableOfContents/--7:----------------":{"role":"article","title":"課題7: 無限スクロールを実装してみよう","abstract":[],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--7:----------------","kind":"article","type":"topic","url":"\/tutorials\/tableofcontents\/--7:----------------"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice3#%E8%A7%A3%E7%AD%94-%E3%83%A9%E3%83%B3%E3%82%AD%E3%83%B3%E3%82%B0%E3%81%AE%E3%82%BB%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B":{"role":"pseudoSymbol","title":"解答: ランキングのセクションを作成する","abstract":[{"type":"text","text":"課題1・2で作ったセクションの上に、ランキングを配置するセクションを作ってみましょう"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice3#%E8%A7%A3%E7%AD%94-%E3%83%A9%E3%83%B3%E3%82%AD%E3%83%B3%E3%82%B0%E3%81%AE%E3%82%BB%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E4%BD%9C%E6%88%90%E3%81%99%E3%82%8B","kind":"section","type":"section","url":"\/tutorials\/tutorial\/practice3#%25E8%25A7%25A3%25E7%25AD%2594-%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E3%2582%25BB%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B"},"doc://net.pixiv.training.Tutorial/tutorials/TableOfContents/--1:------2----------------":{"role":"article","title":"課題1: イラストを2列で表示する仕組みを作ってみよう","abstract":[],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--1:------2----------------","kind":"article","type":"topic","url":"\/tutorials\/tableofcontents\/--1:------2----------------"},"doc://net.pixiv.training.Tutorial/tutorials/TableOfContents":{"role":"overview","title":"はじめに","abstract":[{"type":"text","text":"お絵かきSNSの開発を通して、実例に近いiOSアプリ開発を学んでいきましょう"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents","kind":"overview","type":"topic","url":"\/tutorials\/tableofcontents"},"Practice2_Section1_MainViewController_2.swift":{"syntax":"swift","content":["import UIKit","","class MainViewController: UIViewController {","    @IBOutlet private weak var collectionView: UICollectionView! {","        didSet {","            collectionView.dataSource = self","            registerCells()","        }","    }","","    override func viewDidLoad() {","        super.viewDidLoad()","","        collectionView.collectionViewLayout = {","            let layout = UICollectionViewCompositionalLayout { (sectionIndex, environment) -> NSCollectionLayoutSection? in","                let spacing: CGFloat = 8","                let size: CGFloat = (self.view.bounds.width - spacing) \/ 2","","                let itemSize = NSCollectionLayoutSize(widthDimension: .absolute(size), heightDimension: .fractionalHeight(1))","                let item = NSCollectionLayoutItem(layoutSize: itemSize)","","                let groupSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1), heightDimension: .absolute(size))","                let group = NSCollectionLayoutGroup.horizontal(layoutSize: groupSize, subitems: [item])","                group.interItemSpacing = .fixed(spacing)","","                let section = NSCollectionLayoutSection(group: group)","                section.interGroupSpacing = spacing","","                let sectionHeader = NSCollectionLayoutBoundarySupplementaryItem(","                    layoutSize: .init(widthDimension: .fractionalWidth(1), heightDimension: .absolute(32)),","                    elementKind: \"RecommendedHeader\",","                    alignment: .top","                )","                section.boundarySupplementaryItems = [sectionHeader]","","                return section","            }","            return layout","        }()","    }","}","","extension MainViewController {","    private func registerCells() {","        collectionView.register(UINib(nibName: \"HeaderCell\", bundle: nil), forSupplementaryViewOfKind: \"RecommendedHeader\", withReuseIdentifier: \"HeaderCell\")","        collectionView.register(UINib(nibName: \"IllustCell\", bundle: nil),  forCellWithReuseIdentifier: \"IllustCell\")","    }","}","","extension MainViewController: UICollectionViewDataSource {","    func numberOfSections(in collectionView: UICollectionView) -> Int {","        return 1","    }","","    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {","        return 8","    }","","    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {","        guard let cell = collectionView.dequeueReusableCell(withReuseIdentifier: \"IllustCell\", for: indexPath) as? IllustCell else {","            fatalError()","        }","        return cell","    }","}"],"fileName":"MainViewController.swift","identifier":"Practice2_Section1_MainViewController_2.swift","type":"file","fileType":"swift","highlights":[{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35}]},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice6#%E8%A7%A3%E7%AD%94-%E3%83%AD%E3%83%BC%E3%83%89%E4%B8%AD%E3%81%AE%E6%8C%99%E5%8B%95%E3%82%92%E4%BD%9C%E3%82%8B":{"role":"pseudoSymbol","title":"解答: ロード中の挙動を作る","abstract":[{"type":"text","text":"通信中、何も表示されてないとユーザーはアプリが壊れているのか、ネットワークが遅いのか知ることができません。APIとの通信中はくるくるを出してあげるようにしてみましょう"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice6#%E8%A7%A3%E7%AD%94-%E3%83%AD%E3%83%BC%E3%83%89%E4%B8%AD%E3%81%AE%E6%8C%99%E5%8B%95%E3%82%92%E4%BD%9C%E3%82%8B","kind":"section","type":"section","url":"\/tutorials\/tutorial\/practice6#%25E8%25A7%25A3%25E7%25AD%2594-%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E4%25B8%25AD%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice7":{"role":"project","title":"課題7: 無限スクロールを実装してみよう","estimatedTime":"1hr 0min","abstract":[{"type":"text","text":"おすすめのイラストは、スクロールで下まで読み込んだら次のイラストを表示するようにしたいです"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice7","kind":"project","type":"topic","url":"\/tutorials\/tutorial\/practice7"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice4#%E8%A7%A3%E7%AD%94-Nuke%E3%81%A7%E7%94%BB%E5%83%8F%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B":{"role":"pseudoSymbol","title":"解答: Nukeで画像を表示する","abstract":[{"type":"text","text":"今まで作った仮のUIに実際にイラストの情報を取ってきて表示してみましょう"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice4#%E8%A7%A3%E7%AD%94-Nuke%E3%81%A7%E7%94%BB%E5%83%8F%E3%82%92%E8%A1%A8%E7%A4%BA%E3%81%99%E3%82%8B","kind":"section","type":"section","url":"\/tutorials\/tutorial\/practice4#%25E8%25A7%25A3%25E7%25AD%2594-Nuke%25E3%2581%25A7%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B"},"doc://net.pixiv.training.Tutorial/tutorials/TableOfContents/--8:---------------":{"role":"article","title":"課題8: いいねボタンを実装してみよう","abstract":[],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--8:---------------","kind":"article","type":"topic","url":"\/tutorials\/tableofcontents\/--8:---------------"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice8#%E8%A7%A3%E7%AD%94-%E3%81%84%E3%81%84%E3%81%AD%E3%83%9C%E3%82%BF%E3%83%B3%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B":{"role":"pseudoSymbol","title":"解答: いいねボタンを実装する","abstract":[{"type":"text","text":"おすすめのイラストのCellにいいねボタンを表示してみましょう。また、いいねしたことをAPIを叩いて記録しましょう。いいねを取り消す処理は実装しなくても大丈夫です"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice8#%E8%A7%A3%E7%AD%94-%E3%81%84%E3%81%84%E3%81%AD%E3%83%9C%E3%82%BF%E3%83%B3%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B","kind":"section","type":"section","url":"\/tutorials\/tutorial\/practice8#%25E8%25A7%25A3%25E7%25AD%2594-%25E3%2581%2584%25E3%2581%2584%25E3%2581%25AD%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B"},"doc://net.pixiv.training.Tutorial/tutorials/TableOfContents/--6:----(----)----------":{"role":"article","title":"課題6: 通信中(ロード中)の挙動を作ってみよう","abstract":[],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--6:----(----)----------","kind":"article","type":"topic","url":"\/tutorials\/tableofcontents\/--6:----(----)----------"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice1":{"role":"project","title":"課題1: イラストを2列で表示する仕組みを作ってみよう","estimatedTime":"1hr 0min","abstract":[{"type":"text","text":"イラストを2列で表示する仕組みを作っていきましょう。実際に画像を表示するのはこの先のSectionで扱うので、一旦2列表示の仕組みが作れればOKです"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice1","kind":"project","type":"topic","url":"\/tutorials\/tutorial\/practice1"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice8":{"role":"project","title":"課題8: いいねボタンを実装してみよう","estimatedTime":"1hr 0min","abstract":[{"type":"text","text":"おすすめのイラストのCellにいいねボタンを表示してみましょう。また、いいねしたことをAPIを叩いて記録しましょう。いいねを取り消す処理は実装しなくても大丈夫です"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice8","kind":"project","type":"topic","url":"\/tutorials\/tutorial\/practice8"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice3#%E8%A7%A3%E7%AD%94-%E3%83%A9%E3%83%B3%E3%82%AD%E3%83%B3%E3%82%B0%E3%81%AE%E3%82%BB%E3%83%AB%E3%82%92%E4%BD%9C%E3%82%8B":{"role":"pseudoSymbol","title":"解答: ランキングのセルを作る","abstract":[{"type":"text","text":"課題1・2で作ったセクションの上に、ランキングを配置するセクションを作ってみましょう"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice3#%E8%A7%A3%E7%AD%94-%E3%83%A9%E3%83%B3%E3%82%AD%E3%83%B3%E3%82%B0%E3%81%AE%E3%82%BB%E3%83%AB%E3%82%92%E4%BD%9C%E3%82%8B","kind":"section","type":"section","url":"\/tutorials\/tutorial\/practice3#%25E8%25A7%25A3%25E7%25AD%2594-%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B"},"doc://net.pixiv.training.Tutorial/tutorials/TableOfContents/--5:-ViewModel-------":{"role":"article","title":"課題5: ViewModelを作ってみよう","abstract":[],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--5:-ViewModel-------","kind":"article","type":"topic","url":"\/tutorials\/tableofcontents\/--5:-viewmodel-------"},"https://www.figma.com/file/EkZe8zNKd8uTr1vehAzC74/pixiv%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86?node-id=729%3A28&t=LvrX1uvlmhmv5YFJ-0":{"title":"こちら","titleInlineContent":[{"type":"text","text":"こちら"}],"type":"link","identifier":"https:\/\/www.figma.com\/file\/EkZe8zNKd8uTr1vehAzC74\/pixiv%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86?node-id=729%3A28&t=LvrX1uvlmhmv5YFJ-0","url":"https:\/\/www.figma.com\/file\/EkZe8zNKd8uTr1vehAzC74\/pixiv%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86?node-id=729%3A28&t=LvrX1uvlmhmv5YFJ-0"},"doc://net.pixiv.training.Tutorial/tutorials/TableOfContents/--2:-----------------":{"role":"article","title":"課題2: おすすめのヘッダーを作ってみよう","abstract":[],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--2:-----------------","kind":"article","type":"topic","url":"\/tutorials\/tableofcontents\/--2:-----------------"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice5#%E8%A7%A3%E7%AD%94-ViewModel%E3%82%92%E4%BD%9C%E3%82%8B":{"role":"pseudoSymbol","title":"解答: ViewModelを作る","abstract":[{"type":"text","text":"ViewModelにはUIに表示するためのプロパティを保持したり、APIを叩くなどの処理を行うためのメソッドを生やしていきます。そうすることでViewControllerはその値を見る(購読する)のと、処理を呼び出すだけの存在になり、シンプルなものになっていきます"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice5#%E8%A7%A3%E7%AD%94-ViewModel%E3%82%92%E4%BD%9C%E3%82%8B","kind":"section","type":"section","url":"\/tutorials\/tutorial\/practice5#%25E8%25A7%25A3%25E7%25AD%2594-ViewModel%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice7#%E8%A7%A3%E7%AD%94-%E7%84%A1%E9%99%90%E3%82%B9%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%AB%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B":{"role":"pseudoSymbol","title":"解答: 無限スクロールを実装する","abstract":[{"type":"text","text":"おすすめのイラストは、スクロールで下まで読み込んだら次のイラストを表示するようにしたいです"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice7#%E8%A7%A3%E7%AD%94-%E7%84%A1%E9%99%90%E3%82%B9%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%AB%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B","kind":"section","type":"section","url":"\/tutorials\/tutorial\/practice7#%25E8%25A7%25A3%25E7%25AD%2594-%25E7%2584%25A1%25E9%2599%2590%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B"},"header_2.png":{"alt":null,"type":"image","identifier":"header_2.png","variants":[{"url":"\/images\/header_2.png","traits":["1x","light"]}]},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice6":{"role":"project","title":"課題6: 通信中(ロード中)の挙動を作ってみよう","estimatedTime":"20min","abstract":[{"type":"text","text":"通信中、何も表示されてないとユーザーはアプリが壊れているのか、ネットワークが遅いのか知ることができません。APIとの通信中はくるくるを出してあげるようにしてみましょう"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice6","kind":"project","type":"topic","url":"\/tutorials\/tutorial\/practice6"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice2#%E8%A7%A3%E7%AD%94-%E3%83%98%E3%83%83%E3%83%80%E3%83%BC%E3%82%92%E4%BD%9C%E3%82%8B":{"role":"pseudoSymbol","title":"解答: ヘッダーを作る","abstract":[{"type":"text","text":"2列表示のセクションの上にヘッダーを作って、何のコンテンツの領域かわかるようにしてみましょう"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice2#%E8%A7%A3%E7%AD%94-%E3%83%98%E3%83%83%E3%83%80%E3%83%BC%E3%82%92%E4%BD%9C%E3%82%8B","kind":"section","type":"section","url":"\/tutorials\/tutorial\/practice2#%25E8%25A7%25A3%25E7%25AD%2594-%25E3%2583%2598%25E3%2583%2583%25E3%2583%2580%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice4":{"role":"project","title":"課題4: イラストの情報を取ってきて表示しよう","estimatedTime":"1hr 0min","abstract":[{"type":"text","text":"今まで作った仮のUIに実際にイラストの情報を取ってきて表示してみましょう"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice4","kind":"project","type":"topic","url":"\/tutorials\/tutorial\/practice4"},"Practice2_HeaderCell_2.png":{"alt":null,"type":"image","identifier":"Practice2_HeaderCell_2.png","variants":[{"url":"\/images\/Practice2_HeaderCell_2.png","traits":["1x","light"]}]},"Practice2_HeaderCell_1.png":{"alt":null,"type":"image","identifier":"Practice2_HeaderCell_1.png","variants":[{"url":"\/images\/Practice2_HeaderCell_1.png","traits":["1x","light"]}]},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice3#%E8%A7%A3%E7%AD%94-%E3%82%BB%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E7%AE%A1%E7%90%86%E3%81%97%E3%82%84%E3%81%99%E3%81%8F%E3%81%99%E3%82%8B":{"role":"pseudoSymbol","title":"解答: セクションを管理しやすくする","abstract":[{"type":"text","text":"課題1・2で作ったセクションの上に、ランキングを配置するセクションを作ってみましょう"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice3#%E8%A7%A3%E7%AD%94-%E3%82%BB%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E7%AE%A1%E7%90%86%E3%81%97%E3%82%84%E3%81%99%E3%81%8F%E3%81%99%E3%82%8B","kind":"section","type":"section","url":"\/tutorials\/tutorial\/practice3#%25E8%25A7%25A3%25E7%25AD%2594-%25E3%2582%25BB%25E3%2582%25AF%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2597%25E3%2582%2584%25E3%2581%2599%25E3%2581%258F%25E3%2581%2599%25E3%2582%258B"},"doc://net.pixiv.training.Tutorial/tutorials/TableOfContents/--4:-------------------":{"role":"article","title":"課題4: イラストの情報を取ってきて表示しよう","abstract":[],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--4:-------------------","kind":"article","type":"topic","url":"\/tutorials\/tableofcontents\/--4:-------------------"},"Practice2_Section1_HeaderCell_1.swift":{"syntax":"swift","content":["import UIKit","","class HeaderCell: UICollectionReusableView {","    @IBOutlet private weak var label: UILabel!","","    func bind(_ title: String) {","        label.text = title","    }","}"],"fileName":"HeaderCell.swift","identifier":"Practice2_Section1_HeaderCell_1.swift","type":"file","fileType":"swift","highlights":[]},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice4#%E8%A7%A3%E7%AD%94-%E3%82%A4%E3%83%A9%E3%82%B9%E3%83%88%E3%81%AE%E6%83%85%E5%A0%B1%E3%82%92%E5%8F%96%E3%81%A3%E3%81%A6%E3%81%8F%E3%82%8B":{"role":"pseudoSymbol","title":"解答: イラストの情報を取ってくる","abstract":[{"type":"text","text":"今まで作った仮のUIに実際にイラストの情報を取ってきて表示してみましょう"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice4#%E8%A7%A3%E7%AD%94-%E3%82%A4%E3%83%A9%E3%82%B9%E3%83%88%E3%81%AE%E6%83%85%E5%A0%B1%E3%82%92%E5%8F%96%E3%81%A3%E3%81%A6%E3%81%8F%E3%82%8B","kind":"section","type":"section","url":"\/tutorials\/tutorial\/practice4#%25E8%25A7%25A3%25E7%25AD%2594-%25E3%2582%25A4%25E3%2583%25A9%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258B"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice1#%E8%A7%A3%E7%AD%94-2%E5%88%97%E8%A1%A8%E7%A4%BA%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF%E3%82%92%E4%BD%9C%E3%82%8B":{"role":"pseudoSymbol","title":"解答: 2列表示の仕組みを作る","abstract":[{"type":"text","text":"イラストを2列で表示する仕組みを作っていきましょう。実際に画像を表示するのはこの先のSectionで扱うので、一旦2列表示の仕組みが作れればOKです"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice1#%E8%A7%A3%E7%AD%94-2%E5%88%97%E8%A1%A8%E7%A4%BA%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF%E3%82%92%E4%BD%9C%E3%82%8B","kind":"section","type":"section","url":"\/tutorials\/tutorial\/practice1#%25E8%25A7%25A3%25E7%25AD%2594-2%25E5%2588%2597%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%25AE%25E4%25BB%2595%25E7%25B5%2584%25E3%2581%25BF%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice3":{"role":"project","title":"課題3: ランキングのセクションを作ってみよう","estimatedTime":"1hr 0min","abstract":[{"type":"text","text":"課題1・2で作ったセクションの上に、ランキングを配置するセクションを作ってみましょう"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice3","kind":"project","type":"topic","url":"\/tutorials\/tutorial\/practice3"},"doc://net.pixiv.training.Tutorial/tutorials/Tutorial/Practice2":{"role":"project","title":"課題2: おすすめのヘッダーを作ってみよう","estimatedTime":"40min","abstract":[{"type":"text","text":"2列表示のセクションの上にヘッダーを作って、何のコンテンツの領域かわかるようにしてみましょう"}],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/Tutorial\/Practice2","kind":"project","type":"topic","url":"\/tutorials\/tutorial\/practice2"},"Practice2_Section1_MainViewController_3.swift":{"syntax":"swift","content":["import UIKit","","class MainViewController: UIViewController {","    @IBOutlet private weak var collectionView: UICollectionView! {","        didSet {","            collectionView.dataSource = self","            registerCells()","        }","    }","","    override func viewDidLoad() {","        super.viewDidLoad()","","        collectionView.collectionViewLayout = {","            let layout = UICollectionViewCompositionalLayout { (sectionIndex, environment) -> NSCollectionLayoutSection? in","                let spacing: CGFloat = 8","                let size: CGFloat = (self.view.bounds.width - spacing) \/ 2","","                let itemSize = NSCollectionLayoutSize(widthDimension: .absolute(size), heightDimension: .fractionalHeight(1))","                let item = NSCollectionLayoutItem(layoutSize: itemSize)","","                let groupSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1), heightDimension: .absolute(size))","                let group = NSCollectionLayoutGroup.horizontal(layoutSize: groupSize, subitems: [item])","                group.interItemSpacing = .fixed(spacing)","","                let section = NSCollectionLayoutSection(group: group)","                section.interGroupSpacing = spacing","","                let sectionHeader = NSCollectionLayoutBoundarySupplementaryItem(","                    layoutSize: .init(widthDimension: .fractionalWidth(1), heightDimension: .absolute(32)),","                    elementKind: \"RecommendedHeader\",","                    alignment: .top","                )","                section.boundarySupplementaryItems = [sectionHeader]","","                return section","            }","            return layout","        }()","    }","}","","extension MainViewController {","    private func registerCells() {","        collectionView.register(UINib(nibName: \"HeaderCell\", bundle: nil), forSupplementaryViewOfKind: \"RecommendedHeader\", withReuseIdentifier: \"HeaderCell\")","        collectionView.register(UINib(nibName: \"IllustCell\", bundle: nil),  forCellWithReuseIdentifier: \"IllustCell\")","    }","}","","extension MainViewController: UICollectionViewDataSource {","    func numberOfSections(in collectionView: UICollectionView) -> Int {","        return 1","    }","","    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {","        return 8","    }","","    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {","        guard let cell = collectionView.dequeueReusableCell(withReuseIdentifier: \"IllustCell\", for: indexPath) as? IllustCell else {","            fatalError()","        }","        return cell","    }","","    func collectionView(_ collectionView: UICollectionView, viewForSupplementaryElementOfKind kind: String, at indexPath: IndexPath) -> UICollectionReusableView {","        guard let header = collectionView.dequeueReusableSupplementaryView(ofKind: kind, withReuseIdentifier: \"HeaderCell\", for: indexPath) as? HeaderCell else {","            fatalError()","        }","        switch kind {","        case \"RecommendedHeader\":","            header.bind(\"Recommended\")","            return header","        default:","            fatalError()","         }","    }","}"],"fileName":"MainViewController.swift","identifier":"Practice2_Section1_MainViewController_3.swift","type":"file","fileType":"swift","highlights":[{"line":65},{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71},{"line":72},{"line":73},{"line":74},{"line":75},{"line":76},{"line":77}]},"doc://net.pixiv.training.Tutorial/tutorials/TableOfContents/--3:-------------------":{"role":"article","title":"課題3: ランキングのセクションを作ってみよう","abstract":[],"identifier":"doc:\/\/net.pixiv.training.Tutorial\/tutorials\/TableOfContents\/--3:-------------------","kind":"article","type":"topic","url":"\/tutorials\/tableofcontents\/--3:-------------------"},"Practice2_Section1_MainViewController_1.swift":{"syntax":"swift","content":["import UIKit","","class MainViewController: UIViewController {","    @IBOutlet private weak var collectionView: UICollectionView! {","        didSet {","            collectionView.dataSource = self","            registerCells()","        }","    }","","    override func viewDidLoad() {","        super.viewDidLoad()","","        collectionView.collectionViewLayout = {","            let layout = UICollectionViewCompositionalLayout { (sectionIndex, environment) -> NSCollectionLayoutSection? in","                let spacing: CGFloat = 8","                let size: CGFloat = (self.view.bounds.width - spacing) \/ 2","","                let itemSize = NSCollectionLayoutSize(widthDimension: .absolute(size), heightDimension: .fractionalHeight(1))","                let item = NSCollectionLayoutItem(layoutSize: itemSize)","","                let groupSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1), heightDimension: .absolute(size))","                let group = NSCollectionLayoutGroup.horizontal(layoutSize: groupSize, subitems: [item])","                group.interItemSpacing = .fixed(spacing)","","                let section = NSCollectionLayoutSection(group: group)","                section.interGroupSpacing = spacing","                return section","            }","            return layout","        }()","    }","}","","extension MainViewController {","    private func registerCells() {","        collectionView.register(UINib(nibName: \"HeaderCell\", bundle: nil), forSupplementaryViewOfKind: \"RecommendedHeader\", withReuseIdentifier: \"HeaderCell\")","        collectionView.register(UINib(nibName: \"IllustCell\", bundle: nil),  forCellWithReuseIdentifier: \"IllustCell\")","    }","}","","extension MainViewController: UICollectionViewDataSource {","    func numberOfSections(in collectionView: UICollectionView) -> Int {","        return 1","    }","","    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {","        return 8","    }","","    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {","        guard let cell = collectionView.dequeueReusableCell(withReuseIdentifier: \"IllustCell\", for: indexPath) as? IllustCell else {","            fatalError()","        }","        return cell","    }","}"],"fileName":"MainViewController.swift","identifier":"Practice2_Section1_MainViewController_1.swift","type":"file","fileType":"swift","highlights":[{"line":37}]}}}