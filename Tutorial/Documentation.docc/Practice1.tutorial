@Tutorial(time: 60) {
    @Intro(title: "課題1: イラストを2列で表示する仕組みを作ってみよう") {
        イラストを2列で表示する仕組みを作っていきましょう。実際に画像を表示するのはこの先のSectionで扱うので、一旦2列表示の仕組みが作れればOKです
        
        完成イメージを示したデザインファイルは [こちら](https://www.figma.com/file/EkZe8zNKd8uTr1vehAzC74/pixiv%E3%82%A2%E3%83%97%E3%83%AA%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%88%E3%81%86?node-id=2%3A2&t=LvrX1uvlmhmv5YFJ-0) です
        
        以下は解答になります。この教材では、まず解答を見ずにインターネット等を見て自分で書いてみることをおすすめしています。15分以上詰まったら見るという使い方をしても大丈夫です
    }
    
    @Section(title: "解答: 2列表示の仕組みを作る") {
        @ContentAndMedia {
            UICollectionViewとCompositionalLayoutを使って2列表示の仕組みを作っていきます
        }
            
        @Steps {
            @Step {
                新しいプロジェクトを作成します。iOS > Appを選択します
                
                @Image(source: "Practice1_NewProject.png")
            }
            
            @Step {
                各項目を適当に入力します。今回はUIKitで解答していくため、InterfaceはStoryboardを選択します。Include TestsはONにしておくと良いです
                
                @Image(source: "Practice1_ProjectOption.png")
            }
            
            @Step {
                デフォルトで作られているViewControllerの名前をMainViewControllerに変えておきます
                
                @Code(name: "MainViewController.swift", file: Practice1_Section1_MainViewController_1.swift)
            }
            
            @Step {
                この後イラストを配置していくIllustCellも作ります。まだ画像はないので、一旦赤い背景が表示されるようにします
                
                @Code(name: "IllustCell.swift", file: Practice1_Section1_IllustCell_1.swift)
            }
            
            @Step {
                CollectionViewを配置し、IllustCellの登録をします。Cellの種類はこのあと増えていくと考えられるため、registerCellsというメソッドを生やしています
                
                DataSourceも設定していきます。DataSourceはわかりやすいように適当にSectionの数は1つ、アイテムの数は8個としておきましょう
                
                @Code(name: "MainViewController.swift", file: Practice1_Section1_MainViewController_2.swift, previousFile: Practice1_Section1_MainViewController_1.swift)
            }
            
            @Step {
                Main.storyboardにCollectionViewを追加します。AutoLayoutでSafe Areaに対してleading, top, trailing, bottomのマージンを0に設定します。OutletをMainViewControllerのcollectionViewと紐付けます
                
                @Image(source: "Practice1_Main.png")
            }
            
            @Step {
                IllustCell.xibを作ります。xibファイルを作るには、New File...からViewを選択します
                
                @Image(source: "Practice1_NewFile.png")
            }
            
            @Step {
                Custom ClassにIllustCellを設定します
                
                @Image(source: "Practice1_IllustCell.png")
            }
            
            @Step {
                2列表示を作るにはいくつか方法がありますが、今回は新しめのAPIであるCompositionalLayoutを使っていきます。最初は難しいと感じるかもしれませんが、理解して使うことができればApp Storeのような複雑なレイアウトも組むことができます
                
                違う方法で2列表示を作ることもできますが、今回のアプリの完成形を考えると、ランキングのUIに横スクロールが使われているのでCompositionalLayoutを使うのが適切と判断することができます
                
                @Code(name: "MainViewController.swift", file: Practice1_Section1_MainViewController_3.swift, previousFile: Practice1_Section1_MainViewController_2.swift)
            }
            
            @Step {
                CompositionalLayoutには、Section、Group、Itemという概念があり、それぞれのレイアウト方法を記述することで様々なレイアウトが組めるようになっています
                詳しくは [ドキュメント](https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout) を見ると良いでしょう
                
                @Code(name: "MainViewController.swift", file: Practice1_Section1_MainViewController_4.swift)
            }
            
            @Step {
                今回は2列表示にしたいので、それぞれのCellが画面幅の1/2になっていれば良いです。画面幅の1/2を計算して、Itemのwidthと、ItemをまとめるGroupのheightに設定してあげます。 `.absolute` を使うことで固定値を設定できます
                
                @Code(name: "MainViewController.swift", file: Practice1_Section1_MainViewController_5.swift)
            }
            
            @Step {
                残りはいい感じに埋めてくれる `.fractionalWidth(1)` と `.fractionalHeight(1)` を入れておきます
                
                @Code(name: "MainViewController.swift", file: Practice1_Section1_MainViewController_6.swift)
            }
            
            @Step {
                2列表示はできたのですが、Cellの間に余白がないとわかりづらいので設定します
                
                @Code(name: "MainViewController.swift", file: Practice1_Section1_MainViewController_7.swift)
            }
        }
    }
}
